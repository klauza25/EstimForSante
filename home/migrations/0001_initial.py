# Generated by Django 5.1.6 on 2025-07-10 14:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_consultation', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de la consultation')),
                ('type_consultation', models.CharField(choices=[('Première consultation', 'Première consultation'), ('Suivi', 'Suivi'), ('Urgence', 'Urgence'), ('Téléconsultation', 'Téléconsultation')], default='Première consultation', max_length=30, verbose_name='Type de consultation')),
                ('motif', models.CharField(help_text='Motif principal de la consultation.', max_length=200, verbose_name='Motif')),
                ('description', models.TextField(blank=True, help_text='Symptômes ou situation rapportée.', null=True, verbose_name='Description')),
                ('poids', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Poids (kg)')),
                ('taille', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Taille (cm)')),
                ('tension_artérielle', models.CharField(blank=True, help_text='Ex: 12/8', max_length=20, null=True, verbose_name='Tension artérielle')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Température (°C)')),
                ('pouls', models.PositiveIntegerField(blank=True, null=True, verbose_name='Pouls (bpm)')),
                ('diagnostic', models.TextField(blank=True, help_text='Diagnostic établi lors de la consultation.', null=True, verbose_name='Diagnostic')),
                ('traitement', models.TextField(blank=True, help_text='Le traitement prescrit au patient.', null=True, verbose_name='Traitement prescrit')),
                ('note', models.TextField(blank=True, help_text='Informations additionnelles.', null=True, verbose_name='Note complémentaire')),
                ('status', models.CharField(choices=[('Planifiée', 'Planifiée'), ('En cours', 'En cours'), ('Terminée', 'Terminée'), ('Annulée', 'Annulée')], default='Planifiée', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-date_consultation'],
            },
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'verbose_name': 'Médicament',
                'verbose_name_plural': 'Médicaments',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('Autre', 'Autre / Non binaire')], max_length=10, verbose_name='Sexe')),
                ('telephone', models.CharField(max_length=20, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('poids', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Poids (kg)')),
                ('taille', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Taille (cm)')),
                ('groupe_sanguin', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('Inconnu', 'Inconnu')], default='Inconnu', max_length=10, verbose_name='Groupe sanguin')),
                ('tension_artérielle', models.CharField(blank=True, help_text='Ex: 12/8', max_length=20, null=True, verbose_name='Tension artérielle')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('antecedents_medicaux', models.TextField(blank=True, help_text='Antécédents médicaux importants', null=True, verbose_name='Antécédents médicaux')),
            ],
            options={
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('accueil', 'Accueil'), ('medecin', 'Médecin'), ('infirmier', 'Infirmier'), ('pharmacien', 'Pharmacien')], default='accueil', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('date_examen', models.DateField(blank=True, null=True)),
                ('resultat', models.TextField(blank=True, null=True)),
                ('cout', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('statut', models.CharField(choices=[('En attente', 'En attente'), ('Réalisé', 'Réalisé')], default='En attente', max_length=15)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.consultation')),
            ],
            options={
                'verbose_name': 'Examen',
                'verbose_name_plural': 'Examens',
            },
        ),
        migrations.CreateModel(
            name='Ordonnance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_medicament', models.CharField(max_length=100, verbose_name='Nom du médicament')),
                ('posologie', models.TextField(verbose_name='Posologie')),
                ('duree', models.CharField(max_length=50, verbose_name='Durée du traitement')),
                ('quantite', models.PositiveIntegerField(verbose_name='Quantité prescrite')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes supplémentaires')),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.consultation')),
            ],
            options={
                'verbose_name': 'Ordonnance',
                'verbose_name_plural': 'Ordonnances',
                'ordering': ['-date_prescription'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Ce champ est rempli automatiquement si lié à un acte.', max_digits=12, verbose_name='Montant total dû')),
                ('montant_paye', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Montant réellement versé par le patient.', max_digits=12, verbose_name='Montant payé')),
                ('difference_rendue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text="Montant rendu au patient s'il a trop payé.", max_digits=12, verbose_name='Différence rendue')),
                ('type_paiement', models.CharField(choices=[('Espèces', 'Espèces'), ('Carte Bancaire', 'Carte Bancaire (Visa/MasterCard)'), ('Mobile Money', 'Mobile Money'), ('Airtel Money', 'Airtel Money'), ('OnyFast', 'OnyFast'), ('Virement', 'Virement bancaire'), ('Assurance', 'Paiement par assurance'), ('Autre', 'Autre')], default='Espèces', max_length=30, verbose_name='Mode de paiement')),
                ('numero_transaction', models.CharField(blank=True, help_text='Facultatif - utilisé pour Mobile Money ou carte bancaire.', max_length=100, null=True, verbose_name='Numéro de transaction')),
                ('status', models.CharField(choices=[('Payé', 'Payé'), ('Partiellement payé', 'Partiellement payé'), ('Non payé', 'Non payé'), ('Remboursé', 'Remboursé'), ('Annulé', 'Annulé')], default='Non payé', max_length=30, verbose_name='Statut du paiement')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes supplémentaires')),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.consultation', verbose_name='Consultation')),
                ('examen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.examen', verbose_name='Examen')),
                ('ordonnance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.ordonnance', verbose_name='Ordonnance')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur qui a enregistré le paiement')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement'],
            },
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='home.patient', verbose_name='Patient'),
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('prenom', models.CharField(max_length=50)),
                ('role', models.CharField(choices=[('Médecin', 'Médecin'), ('Infirmier', 'Infirmier'), ('Pharmacien', 'Pharmacien'), ('Accueil', 'Accueil')], max_length=15)),
                ('specialite', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin'), ('Autre', 'Autre / Non binaire')], max_length=10)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Personnel',
                'verbose_name_plural': 'Personnels',
            },
        ),
        migrations.AddField(
            model_name='consultation',
            name='infirmier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consultations_as_nurse', to='home.personnel'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='medecin',
            field=models.ForeignKey(limit_choices_to={'role': 'Médecin'}, on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='home.personnel', verbose_name='Médecin'),
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rendezvous', models.DateField(help_text='Sélectionnez une date.', verbose_name='Date du rendez-vous')),
                ('heure_debut', models.TimeField(help_text='Exemple: 09:30', verbose_name='Heure de début')),
                ('heure_fin', models.TimeField(help_text='Exemple: 10:00', verbose_name='Heure de fin')),
                ('motif', models.CharField(blank=True, help_text='Raison du rendez-vous (facultatif).', max_length=255, null=True, verbose_name='Motif du rendez-vous')),
                ('status', models.CharField(choices=[('En attente', 'En attente'), ('Confirmé', 'Confirmé'), ('Annulé', 'Annulé'), ('Terminé', 'Terminé')], default='En attente', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.consultation', verbose_name='Consultation')),
                ('medecin', models.ForeignKey(limit_choices_to={'role': 'Médecin'}, on_delete=django.db.models.deletion.CASCADE, related_name='rendezvous_list', to='home.personnel', verbose_name='Médecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rendezvous_list', to='home.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['-date_rendezvous', '-heure_debut'],
            },
        ),
    ]
